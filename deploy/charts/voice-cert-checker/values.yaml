# Default values for cert-checker.
# This is a YAML-formatted file.
# All work is from mogensen/cert-checker adapting for my use case
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: rockosocko/voice-cert-checker
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## Monitoring
livenessProbe:
  enabled: true
  httpGet:
    path: /
    port: 8081
  initialDelaySeconds: 2
  periodSeconds: 3

readinessProbe:
  enabled: true
  httpGet:
    path: /
    port: 8081
  initialDelaySeconds: 2
  periodSeconds: 3

## Config
voicecertchecker:
  loglevel: info
  intervalminutes: 1
  certificates:
    - dns: google.com
    - dns: example.com
    - dns: twitter.com
    - dns: expired.badssl.com
    - dns: wrong.host.badssl.com
    - dns: untrusted-root.badssl.com
    - dns: self-signed.badssl.com
    - dns: revoked.badssl.com
    - dns: dh480.badssl.com
    - dns: dh512.badssl.com
    - dns: null.badssl.com
    - dns: rc4-md5.badssl.com
    - dns: rc4.badssl.com

serviceMonitor:
  enabled: false
  additionalLabels: {}

grafanaDashboard:
  enabled: false

podAnnotations:
  prometheus.io/path: /metrics
  prometheus.io/port: "8080"
  prometheus.io/scrape: "true"
  enable.voice-cert-checker.io/voice-cert-checker: "true"
  # If you want apparmor security
  # container.apparmor.security.beta.kubernetes.io/cert-checker: runtime/default

podSecurityContext:
  fsGroup: 35212

securityContext:
  privileged: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 35212
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 8080

uiService:
  type: ClusterIP
  port: 8081

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: voice-cert-checker.local
      paths:
      - path: /
        backend:
          serviceName: voice-cert-checker.local
          servicePort: 8081
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - voice-cert-checker.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
