---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: voice-cert-checker
  labels:
    app.kubernetes.io/name: voice-cert-checker
    app.kubernetes.io/instance: voice-cert-checker
    app.kubernetes.io/version: "v0.0.1"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: voice-cert-checker
  labels:
    app.kubernetes.io/name: voice-cert-checker
    app.kubernetes.io/instance: voice-cert-checker
    app.kubernetes.io/version: "v0.0.1"
data:
  config.yaml: |
      certificates:
      - dns: google.com
      - dns: example.com
      - dns: twitter.com
      - dns: expired.badssl.com
      - dns: wrong.host.badssl.com
      - dns: untrusted-root.badssl.com
      - dns: self-signed.badssl.com
      - dns: revoked.badssl.com
      - dns: dh480.badssl.com
      - dns: dh512.badssl.com
      - dns: null.badssl.com
      - dns: rc4-md5.badssl.com
      - dns: rc4.badssl.com
      intervalminutes: 1
      loglevel: info
---
apiVersion: v1
kind: Service
metadata:
  name: voice-cert-checker
  labels:
    app.kubernetes.io/name: voice-cert-checker
    app.kubernetes.io/instance: voice-cert-checker
    app.kubernetes.io/version: "v0.0.1"
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: http
      protocol: TCP
      name: http
    - port: 8080
      targetPort: metrics-http
      protocol: TCP
      name: metrics-http
  selector:
    app.kubernetes.io/name: voice-cert-checker
    app.kubernetes.io/instance: voice-cert-checker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voice-cert-checker
  labels:
    app.kubernetes.io/name: voice-cert-checker
    app.kubernetes.io/instance: voice-cert-checker
    app.kubernetes.io/version: "v0.0.1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: voice-cert-checker
      app.kubernetes.io/instance: voice-cert-checker
  template:
    metadata:
      annotations:
        enable.cert-checker.io/cert-checker: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: voice-cert-checker
        app.kubernetes.io/instance: voice-cert-checker
    spec:
      serviceAccountName: voice-cert-checker
      securityContext:
        fsGroup: 35212
      volumes:
        - name: config-volume
          configMap:
            name: voice-cert-checker
      containers:
        - name: voice-cert-checker
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 35212
          image: "rockosocko/voice-cert-checker:v0.0.1"
          command: ["/app/voice-cert-checker", "-c", "/data/config.yaml"]
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: config-volume
            mountPath: /data/
          ports:
            - name: metrics-http
              containerPort: 8080
              protocol: TCP
            - name: http
              containerPort: 8081
              protocol: TCP
          resources:
            {}
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 2
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 2
            periodSeconds: 3
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: voice-cert-checker
  labels:
    app.kubernetes.io/name: voice-cert-checker
    app.kubernetes.io/instance: voice-cert-checker
    app.kubernetes.io/version: "v0.0.1"
spec:
  rules:
    - host: "voice-cert-checker.localtest.me"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: voice-cert-checker
                port:
                  number: 8081
